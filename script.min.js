const canvas=document.querySelector(".canvas"),reset=document.querySelector(".reset"),generate=document.querySelector(".generate"),redo=document.querySelector(".redo"),space=document.querySelector(".space"),set=document.querySelector(".setBtn"),ctx=canvas.getContext("2d"),copy=document.querySelector(".copy"),design=document.querySelector(".design"),userDesign=document.querySelector(".user-design"),save=document.querySelector(".save"),localCanvas=localStorage.getItem("canvasArray"),previewLineHandler=e=>{clear(),drawGrid(),drawLines(),previewLine(e)};let localStroke,localColor,canvasWidth,canvasHeight,x,y,stroke="",color="#000000",num=-1,canvasArray=[];function previewLine(e){const t=e.offsetX,n=e.offsetY;ctx.beginPath(),ctx.strokeStyle=color,ctx.lineWidth=stroke||1,ctx.moveTo(x,y),ctx.lineTo(t,n),ctx.stroke()}function int(e){return"number"==typeof e}function copyText(){design.select(),design.setSelectionRange(0,99999999),navigator.clipboard.writeText(`${design.value}`)}function setArray(){0===canvasArray.length?design.value="[ ]":design.value=`[${canvasArray}]`}function redoFunc(){for(let e=0;e<4;e++)canvasArray.pop();num-=4}function clear(){ctx.clearRect(0,0,canvas.width,canvas.height)}function drawLines(){let e=0;for(ctx.beginPath(),ctx.strokeStyle="#000000",ctx.lineWidth=1;e<canvasArray.length;){let t=canvasArray[e],n=canvasArray[e+1];int(t)&&int(n)?(ctx.moveTo(t,n),ctx.lineTo(canvasArray[e+2],canvasArray[e+3]),e+=4):int(t)||int(n)?Math.sign(t)?(ctx.stroke(),ctx.beginPath(),ctx.lineWidth=t,e++):(ctx.stroke(),ctx.beginPath(),ctx.strokeStyle=t,e++):(ctx.stroke(),ctx.beginPath(),ctx.strokeStyle=t,ctx.lineWidth=n,e+=2)}ctx.stroke()}function generateCode(){let e=0;for(space.innerHTML="",space.innerHTML+="<div>const canvas = document.querySelector('canvas');</div><div>const ctx = canvas.getContext('2d');</div><div>ctx.beginPath();</div><div>ctx.strokeStyle = '#000000';</div><div>ctx.lineWidth = 1;</div>";e<canvasArray.length;){let t=canvasArray[e],n=canvasArray[e+1];int(t)&&int(n)?(space.innerHTML+=`<div>ctx.moveTo(${t}, ${n});</div>`,space.innerHTML+=`<div>ctx.lineTo(${canvasArray[e+2]}, ${canvasArray[e+3]});</div>`,e+=4):int(t)||int(n)?Math.sign(t)?(space.innerHTML+=`<div>ctx.stroke();</div><div>ctx.beginPath();</div><div>ctx.lineWidth = '${t}';</div>`,e++):(space.innerHTML+=`<div>ctx.stroke();</div><div>ctx.beginPath();</div><div>ctx.strokeStyle = '${t}';</div>`,e++):(space.innerHTML+=`<div>ctx.stroke();</div><div>ctx.beginPath();</div><div>ctx.strokeStyle = '${t}';</div>`,space.innerHTML+=`<div>ctx.lineWidth = '${n}';</div>`,e+=2)}space.innerHTML+="<div>ctx.stroke();</div>"}function resize(e,...t){"def"===e?(height=window.innerHeight,width=window.innerWidth,canvas.width=width/100*70,canvas.height=height/100*72.5):(canvas.width=t[0],canvas.height=t[1])}function drawGrid(){const e=2.5*parseFloat(getComputedStyle(document.documentElement).fontSize);canvasWidth=document.querySelector(".width").value||canvas.width,canvasHeight=document.querySelector(".height").value||canvas.height,ctx.beginPath(),ctx.strokeStyle="#AAAAAA",ctx.lineWidth=1;for(let t=0;t<=canvasWidth;t+=e)ctx.moveTo(t,0),ctx.lineTo(t,canvasHeight);for(let t=0;t<=canvasHeight;t+=e)ctx.moveTo(0,t),ctx.lineTo(canvasWidth,t);ctx.stroke()}resize("def"),drawGrid(),null!==localCanvas&&(canvasArray=JSON.parse(localCanvas),drawLines()),setArray(),window.addEventListener("resize",(e=>{const t=document.querySelector(".width").value,n=document.querySelector(".height").value;t&&n?resize("custom",t,n):resize("def"),drawGrid(),drawLines()})),window.addEventListener("beforeunload",(e=>{localStorage.getItem("canvasArray")!==JSON.stringify(canvasArray)&&e.preventDefault()})),canvas.addEventListener("contextmenu",(e=>{e.preventDefault()})),canvas.addEventListener("pointerdown",(e=>{localColor=document.querySelector(".color").value,localStroke=document.querySelector(".stroke-width").value,localColor!==color&&(color=localColor,num++,canvasArray[num]=color),localStroke!==stroke&&(stroke=localStroke,num++,canvasArray[num]=stroke),x=e.offsetX,y=e.offsetY,num++,canvasArray[num]=x,num++,canvasArray[num]=y,canvas.addEventListener("mousemove",previewLineHandler)})),canvas.addEventListener("pointerup",(e=>{let t=e.offsetX,n=e.offsetY;clear(),drawGrid(),drawLines(),canvas.removeEventListener("mousemove",previewLineHandler),num++,canvasArray[num]=t,num++,canvasArray[num]=n,ctx.beginPath(),ctx.strokeStyle=color,ctx.lineWidth=stroke,ctx.moveTo(x,y),ctx.lineTo(t,n),ctx.stroke(),setArray()})),redo.addEventListener("click",(()=>{clear(),redoFunc(),drawGrid(),drawLines(),setArray()})),generate.addEventListener("click",(()=>{generateCode()})),reset.addEventListener("click",(()=>{clear(),drawGrid(),canvasArray=[],num=-1,localStorage.removeItem("canvasArray"),setArray()})),set.addEventListener("click",(()=>{canvasWidth=document.querySelector(".width").value,canvasHeight=document.querySelector(".height").value,resize("custom",canvasWidth,canvasHeight),drawGrid(),drawLines()})),copy.addEventListener("click",(()=>{copyText()})),userDesign.addEventListener("click",(()=>{clear(),canvasArray=JSON.parse(document.querySelector(".new-design").value),drawGrid(),drawLines(),setArray()})),save.addEventListener("click",(()=>{localStorage.setItem("canvasArray",JSON.stringify(canvasArray))}));
